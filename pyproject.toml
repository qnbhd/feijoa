[project]
name = "feijoa"
dynamic = ["version"]
description = "Hyperparameter's optimization framework"
authors = [
    {name = "Konstantin Templin", email = "1qnbhd@gmail.com"}
]
maintainers = [
    {name = "Konstantin Templin", email = "1qnbhd@gmail.com"}
]
urls = {Repository = "https://github.com/qnbhd/feijoa"}
readme = "README.md"
keywords = ["hyperparameters", "BBO", "optimization", "autotuning"]
license = {text = "GPL-3.0"}
requires-python = ">=3.6"
dependencies = [
    "numpy>=1.19.5", "pandas>=0.25.3",
    "rich>=10.11.0", "pydantic>=1.7.4",
    "mabalgs>=0.6.8", "plotly>=5.9.0",
    "PyYAML>=6.0", "scikit-learn>=0.24.2",
    "importlib-metadata>=4.8.3",
    "joblib>=1.1.0",
    "SQLAlchemy>=1.4.39"
]
classifiers = [
        "Intended Audience :: Science/Research",
        "Intended Audience :: Developers",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.6",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3 :: Only",
        "Topic :: Scientific/Engineering",
        "Topic :: Scientific/Engineering :: Mathematics",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
        "Topic :: Software Development",
        "Topic :: Software Development :: Libraries",
        "Topic :: Software Development :: Libraries :: Python Modules",
]

[build-system]
requires = [
    "setuptools>=45",
    "setuptools_scm>=6.2",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
exclude = ["tests"]

[project.optional-dependencies]
dev = ["pytest>=7.1.1", "isort>=5.10.1", "flake8>=4.0.1", "pytest-cov>=3.0.0"]
all = ["click>=8.0.4", "numba>=0.53.1", "tinydb>=4.7.0", "executor>=23.2", "scikit-optimize>=0.9.0"]

[tool.setuptools_scm]
write_to = "feijoa/_version.py"
local_scheme = "no-local-version"
version_scheme = "python-simplified-semver"

[tool.black]
line-length = 70
target-version = ['py36']
exclude = '''
/(
  | \.git
  | \.mypy_cache
  | \.venv
  | dist
  | docs
)/
'''

[tool.isort]
profile = 'black'
src_paths = ['optuna', 'tests']
line_length = 70
lines_after_imports = 2
force_single_line = 'True'
force_sort_within_sections = 'True'
order_by_type = 'False'

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = "--color=yes"
