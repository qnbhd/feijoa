name: test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ "3.6", "3.7", "3.8", "3.9", "3.10" ]
    runs-on: ${{ matrix.os }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install requirements
        run: pip install -r requirements.txt

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run python tests
        run: |
          pytest --log-level=INFO --cov=feijoa --cov-report=xml tests/
          
      - name: Install gtime
        run: |
          brew install gnu-time
        if: matrix.os == 'macos-latest'

      - name: Run functional tests
        run: |
          export PYTHONPATH="${PWD}:${PWD}/examples/gcc:${PYTHONPATH}"
          cd examples/gcc
          
          if [[ $OS == 'macos-latest' ]]; then
            toolchain=g++-11
          else
            toolchain=g++
          fi
          
          python runner.py run --toolchain=$toolchain --search-space=space_minimal.yaml \
            --source-file=matrixmultiply/matrixmultiply.cpp \
            --iterations=2 --n-trials=10
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        env:
          OS: ${{ matrix.os }}

      - name: Archive gcc runner db
        uses: actions/upload-artifact@v3
        with:
          name: GCC example tiny db
          path: examples/gcc/*.db
          
      - name: Publish codecov report
        uses: codecov/codecov-action@v1
        if: matrix.python-version == '3.9' && matrix.os == 'ubuntu-latest'
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
